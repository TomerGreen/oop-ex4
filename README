tomerg



=============================
=      File description     =
=============================


=============================
=          Design           =
=============================

*  For purposes of extendability we chose to implement AvlTree as a class inheriting from an abstract BinarySearchTree
class. This is because all of the fields and nested classes, and some of the methods of AvlTree can be applied to any
ordered binary tree if one chooses to implement a new class.

*  We decided to nest the Node and BinaryTreeIterator classes in the abstract BinarySearchTree class. This is because
objects in these classes can be used by any ordered binary tree. Additionally, we do not want Node or Iterator
instances to be created outside the context of an actual binary search tree. It also enabled us to discard some getters
and setters for these classes, since BinarySearchTree has access to their private fields.


=============================
=  Implementation details   =
=============================

*  In order to refrain from having to probe the tree twice in every add operation, we wrote a helper function that,
when given a value, returns either a node with that value, or the parent node of that value were it added to the tree.
We can then check if the value exists and get the node we should attach it to in one probing.

=============================
=   Answers to Questions    =
=============================





